{
  "name": "SevDesk - Belegerfassung - Teil 2: Verarbeitung (v2)",
  "nodes": [
    {
      "parameters": {
        "content": "## üìÑ SevDesk - Document Processing - Part 2: Processing\n\n**Purpose:** Receives pre-processed data from Part 1 and handles core business logic.\n\n**Key Functions:**\nüîÑ **Data Transformation:** Converts extracted information into SevDesk-compatible format\nüìù **Voucher Creation:** Creates draft voucher in SevDesk with document upload\n‚òÅÔ∏è **Cloud Archiving:** Stores original documents in external cloud storage\nüöÄ **Workflow Orchestration:** Forwards voucher ID to Part 3 for final validation\n\n**Technology Stack:** SevDesk API, Google Cloud Storage, n8n Webhooks",
        "height": 280,
        "width": 450,
        "color": 4
      },
      "name": "üìÑ Workflow Overview",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 2,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "document-processing",
        "options": {}
      },
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        250,
        300
      ],
      "webhookId": "document-processing-webhook"
    },
    {
      "parameters": {
        "content": "**üîê Webhook Security Validation**\n\nReceives data from Part 1 workflow and validates:\n‚Ä¢ Webhook authentication key\n‚Ä¢ Request payload structure\n‚Ä¢ Data integrity checks\n‚Ä¢ Security compliance",
        "width": 280,
        "height": 120
      },
      "name": "üîê Security Validation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 2,
      "position": [
        250,
        130
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body?.webhook_key }}",
              "value2": "secret-key"
            }
          ]
        }
      },
      "name": "Webhook-Key validieren",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        500,
        300
      ]
    },
    {
      "parameters": {
        "code": "// Extract document data from webhook\nconst webhookData = $input.item.json.body;\nconst documentData = webhookData.data;\nconst config = {}; // Empty config object since load node was removed\n\n// Calculate voucher type\nlet voucherType = 'VOU'; // Default is invoice\nconst docType = documentData.documentData?.documentType?.toLowerCase() || '';\n\nif (docType.includes('gutschrift') || docType.includes('credit')) {\n  voucherType = 'VOU_CREDIT';\n}\n\n// Determine remaining data\nconst supplierName = documentData.documentData?.supplierName || 'Unknown Supplier';\nconst documentDate = documentData.documentData?.invoiceDate || new Date().toISOString().split('T')[0];\nconst totalAmount = documentData.documentData?.totalAmount || 0;\n\n// Create voucher data for SevDesk\nconst voucherData = {\n  voucherType: voucherType,\n  supplierName: supplierName,\n  documentDate: documentDate,\n  totalAmount: totalAmount,\n  currency: documentData.documentData?.currency || 'EUR',\n  description: `Automatically captured: ${documentData.fileName || 'Document'} (${docType})`,\n  status: 100, // Draft\n  fileName: documentData.fileName || 'document.pdf',\n  fileData: documentData.fileData || null,\n  filePath: documentData.filePath || null,\n  fileType: documentData.fileType || 'application/pdf',\n  invoiceNumber: documentData.documentData?.invoiceNumber || '',\n  webhookUrl: 'http://localhost:5678/webhook/document-validation',\n  taxRate: documentData.documentData?.taxAmount ? \n    ((documentData.documentData.taxAmount / (totalAmount - documentData.documentData.taxAmount)) * 100).toFixed(2) : \n    '19'\n};\n\nreturn {\n  json: {\n    ...documentData,\n    voucherData\n  }\n};"
      },
      "name": "Prepare Voucher Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        300
      ]
    },
    {
      "parameters": {
        "content": "**üìã Data Preparation for SevDesk API**\n\nProcesses incoming document data and prepares structured voucher information including:\n‚Ä¢ Document type classification\n‚Ä¢ Supplier data extraction  \n‚Ä¢ Amount & tax calculation\n‚Ä¢ SevDesk-specific formatting",
        "width": 280,
        "height": 160
      },
      "name": "üìã Data Preparation Info",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 2,
      "position": [
        800,
        130
      ]
    },
    {
      "parameters": {
        "resource": "voucher",
        "operation": "create",
        "voucherType": "={{ $json.voucherData.voucherType }}",
        "voucherDate": "={{ $json.voucherData.documentDate }}",
        "description": "={{ $json.voucherData.description }}",
        "status": "={{ $json.voucherData.status }}",
        "supplierName": "={{ $json.voucherData.supplierName }}",
        "invoiceNumber": "={{ $json.voucherData.invoiceNumber }}",
        "totalAmount": "={{ $json.voucherData.totalAmount }}",
        "taxRate": "={{ $json.voucherData.taxRate }}",
        "additionalOptions": {
          "uploadDocument": true,
          "documentName": "={{ $json.voucherData.fileName }}",
          "documentContent": "={{ $json.voucherData.fileData || $json.voucherData.filePath }}",
          "documentContentType": "={{ $json.voucherData.fileType }}"
        }
      },
      "name": "SevDesk - Create Voucher",
      "type": "n8n-nodes-sevdesk-v2.sevDesk",
      "typeVersion": 1,
      "position": [
        1100,
        300
      ],
      "credentials": {
        "sevDeskApi": {
          "id": "6",
          "name": "SevDesk API"
        }
      }
    },
    {
      "parameters": {
        "content": "**üè¢ Core SevDesk Integration**\n\nCentral processing step that:\n‚Ä¢ Creates voucher in SevDesk\n‚Ä¢ Uploads document attachment\n‚Ä¢ Validates all required fields\n‚Ä¢ Returns voucher ID for tracking",
        "width": 260,
        "height": 140
      },
      "name": "üè¢ SevDesk Integration",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 2,
      "position": [
        1100,
        150
      ]
    },
    {
      "parameters": {
        "bucketName": "sevdesk-documents-archive",
        "fileName": "={{ 'belege/' + $json.voucherData.supplierName.replace(/[^a-zA-Z0-9]/g, '_') + '/' + $json.voucherData.documentDate + '_' + $json.voucherData.invoiceNumber.replace(/[^a-zA-Z0-9]/g, '_') + '.pdf' }}",
        "binaryPropertyName": "data"
      },
      "name": "Save to Cloud",
      "type": "n8n-nodes-base.googleCloudStorage",
      "typeVersion": 1.2,
      "position": [
        1400,
        300
      ],
      "credentials": {
        "googleCloudStorageOAuth2Api": {
          "id": "8",
          "name": "Google Cloud Storage"
        }
      }
    },
    {
      "parameters": {
        "content": "**‚òÅÔ∏è Cloud Storage Archive**\n\nSecure document archiving:\n‚Ä¢ Organized folder structure\n‚Ä¢ Metadata preservation\n‚Ä¢ Long-term accessibility\n‚Ä¢ Backup & compliance",
        "width": 260,
        "height": 120
      },
      "name": "‚òÅÔ∏è Cloud Storage Info",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 2,
      "position": [
        1400,
        150
      ]
    },
    {
      "parameters": {
        "url": "={{ $json.voucherData.webhookUrl }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "jsonBody": "={{ { webhook_key: 'secret-key', data: { voucherId: $node[\"SevDesk - Create Voucher\"].json.id, cloudStoragePath: $node[\"Save to Cloud\"].json.fileUrl || '', ...$json } } }}",
        "options": {}
      },
      "name": "Forward to Part 3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1700,
        300
      ]
    },
    {
      "parameters": {
        "content": "**üöÄ Workflow Orchestration**\n\nForwards processed data to validation:\n‚Ä¢ Voucher ID transmission\n‚Ä¢ Cloud storage path\n‚Ä¢ Complete document metadata\n‚Ä¢ Validation trigger",
        "width": 260,
        "height": 120
      },
      "name": "üöÄ Orchestration Info",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 2,
      "position": [
        1700,
        150
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $node[\"SevDesk - Create Voucher\"].error !== undefined || $node[\"Forward to Part 3\"].error !== undefined }}",
              "value2": true
            }
          ]
        }
      },
      "name": "Error occurred?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1950,
        300
      ]
    },
    {
      "parameters": {
        "content": "**‚ö†Ô∏è Error Handling & Monitoring**\n\nComprehensive error management:\n‚Ä¢ Multi-channel notifications\n‚Ä¢ Detailed error logging\n‚Ä¢ Support team alerts\n‚Ä¢ User feedback responses",
        "width": 280,
        "height": 120
      },
      "name": "‚ö†Ô∏è Error Handling Info",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 2,
      "position": [
        2200,
        50
      ]
    },
    {
      "parameters": {
        "fromEmail": "error-reporting@example.com",
        "toEmail": "support@example.com",
        "subject": "Fehler im Belegerfassung-Workflow (Verarbeitung)",
        "content": "=Es ist ein Fehler im Belegerfassung-Workflow (Teil 2: Verarbeitung) aufgetreten:\n\nFehler: {{ $node[\"SevDesk - Create Voucher\"].error ? $node[\"SevDesk - Create Voucher\"].error.message : $node[\"Forward to Part 3\"].error.message }}\n\nDetails: {{ JSON.stringify($node[\"SevDesk - Create Voucher\"].error || $node[\"Forward to Part 3\"].error, null, 2) }}\n\nZeitstempel: {{ $now.toISOString() }}\n\nBitte √ºberpr√ºfen Sie den Workflow und beheben Sie den Fehler.",
        "options": {}
      },
      "name": "Notify Support",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        2200,
        200
      ],
      "credentials": {
        "smtp": {
          "id": "10",
          "name": "SMTP"
        }
      }
    },
    {
      "parameters": {
        "chatId": "support-alerts",
        "content": "=‚ö†Ô∏è FEHLER im Belegerfassung-Workflow (Verarbeitung):\n\n{{ $node[\"SevDesk - Create Voucher\"].error ? $node[\"SevDesk - Create Voucher\"].error.message : $node[\"Forward to Part 3\"].error.message }}\n\nZeitstempel: {{ $now.toISOString() }}"
      },
      "name": "Schedule Notification",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        2200,
        400
      ],
      "credentials": {
        "signalApi": {
          "id": "11",
          "name": "Signal API"
        }
      }
    },
    {
      "parameters": {
        "respond": "when",
        "responseFor": "webhook",
        "responseCode": 200,
        "body": "{\n    \"success\": true,\n    \"message\": \"Beleg erfolgreich verarbeitet\",\n    \"voucherId\": \"{{ $node[\"SevDesk - Create Voucher\"].json.id }}\"\n}"
      },
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2,
      "position": [
        1950,
        600
      ]
    },
    {
      "parameters": {
        "respond": "when",
        "responseFor": "webhook",
        "responseCode": 500,
        "body": "{\n    \"success\": false,\n    \"message\": \"Fehler bei der Verarbeitung\",\n    \"error\": \"{{ $json.error.message }}\"\n}"
      },
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 2,
      "position": [
        2450,
        300
      ]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Webhook-Key validieren",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook-Key validieren": {
      "main": [
        [
          {
            "node": "Prepare Voucher Data",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Prepare Voucher Data": {
      "main": [
        [
          {
            "node": "SevDesk - Create Voucher",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SevDesk - Create Voucher": {
      "main": [
        [
          {
            "node": "Save to Cloud",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Cloud": {
      "main": [
        [
          {
            "node": "Forward to Part 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Forward to Part 3": {
      "main": [
        [
          {
            "node": "Error occurred?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error occurred?": {
      "main": [
        [
          {
            "node": "Notify Support",
            "type": "main",
            "index": 0
          },
          {
            "node": "Schedule Notification",
            "type": "main",
            "index": 0
          },
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}