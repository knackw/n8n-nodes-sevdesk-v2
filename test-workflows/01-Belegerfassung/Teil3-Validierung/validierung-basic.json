{
	"name": "SevDesk - Belegerfassung - Teil 3: Validierung (v2)",
	"nodes": [
		{
			"parameters": {
				"content": "## SevDesk - Belegerfassung - Teil 3: Validierung\n\n**Zweck:**\nDieser Workflow ist der finale Schritt der Belegerfassung. Er empf√§ngt den in Teil 2 erstellten Beleg und entscheidet √ºber dessen Freigabe.\n\n**Logik:**\n- **Auto-Validierung:** Wenn konfiguriert, wird der Beleg automatisch in SevDesk freigegeben (gebucht).\n- **Manuelle Validierung:** Falls keine automatische Freigabe erfolgt, wird eine Benachrichtigung an die zust√§ndigen Mitarbeiter gesendet, um eine manuelle Pr√ºfung anzufordern.",
				"height": 260,
				"width": 420
			},
			"id": "013_DOC_01",
			"name": "Workflow-Beschreibung",
			"type": "n8n-nodes-base.stickyNote",
			"typeVersion": 2,
			"position": [0, 0]
		},
		{
			"parameters": {
				"httpMethod": "POST",
				"path": "document-validation",
				"options": {}
			},
			"id": "013_TRG_01",
			"name": "Webhook Trigger",
			"type": "n8n-nodes-base.webhook",
			"typeVersion": 2,
			"position": [250, 300],
			"webhookId": "document-validation-webhook"
		},
		{
			"parameters": {
				"conditions": {
					"string": [
						{
							"value1": "={{ $(json.body && json.body.webhook_key) }}",
							"value2": "secret-key"
						}
					]
				}
			},
			"id": "013_VAL_01",
			"name": "Webhook-Key validieren",
			"type": "n8n-nodes-base.if",
			"typeVersion": 2.2,
			"position": [500, 300]
		},
		{
			"parameters": {
				"code": "// Extrahiere die Beleg-Daten aus dem Webhook\nconst webhookData = $input.item.json.body;\nconst data = webhookData.data;\n\n// Konfiguration f√ºr die Validierung (kann hier hartcodiert oder aus einer Variablen geladen werden)\nconst autoValidate = true; // Auf `false` setzen, um manuelle Pr√ºfung zu erzwingen\n\n// Bestimme den Validierungsstatus basierend auf der Konfiguration\nconst validationStatus = autoValidate ? 'auto_approved' : 'pending_manual_review';\n\nreturn {\n  json: {\n    ...data,\n    validationStatus,\n    notificationRecipients: ['accounting@example.com']\n  }\n};"
			},
			"id": "013_TRF_01",
			"name": "Validierungsdaten vorbereiten",
			"type": "n8n-nodes-base.code",
			"typeVersion": 2,
			"position": [800, 300]
		},
		{
			"parameters": {
				"content": "**üîç Auto-Validierung-Logik**\n\n**Funktion:** Intelligente Entscheidung √ºber die Belegfreigabe\n\n**Kriterien f√ºr Auto-Validierung:**\n- Konfigurierte Freigabe-Regeln (autoValidate = true)\n- Vollst√§ndige Metadaten vorhanden\n- Lieferant ist bekannt und vertrauensw√ºrdig\n- Betrag liegt unter Freigabe-Limit\n\n**Ausgabe:** Validierungsstatus ('auto_approved' oder 'pending_manual_review')\n\n**Beschreibung:** Reduziert manuellen Aufwand durch automatisierte Freigabe von Standard-Belegen bei gleichzeitiger Wahrung der Kontrollmechanismen.",
				"width": 260
			},
			"id": "013_DOC_02",
			"name": "Auto-Validierung-Logik",
			"type": "n8n-nodes-base.stickyNote",
			"typeVersion": 2,
			"position": [1100, 80]
		},
		{
			"parameters": {
				"conditions": {
					"string": [
						{
							"value1": "={{ $json.validationStatus }}",
							"value2": "auto_approved"
						}
					]
				}
			},
			"id": "013_VAL_02",
			"name": "Auto-Validierung?",
			"type": "n8n-nodes-base.if",
			"typeVersion": 2.2,
			"position": [1100, 300]
		},
		{
			"parameters": {
				"resource": "voucher",
				"operation": "update",
				"voucherId": "={{ $json.voucherId }}",
				"status": 1000
			},
			"id": "013_SVC_01",
			"name": "SevDesk - Beleg freigeben",
			"type": "n8n-nodes-sevdesk-v2.sevDesk",
			"typeVersion": 1,
			"position": [1350, 200],
			"credentials": {
				"sevDeskApi": {
					"id": "6",
					"name": "SevDesk API"
				}
			}
		},
		{
			"parameters": {
				"content": "**‚úÖ SevDesk-Freigabe-Prozess**\n\n**Funktion:** Automatische Belegfreigabe in SevDesk\n\n**Prozess:**\n- Beleg-Status wird auf 1000 (gebucht) gesetzt\n- Buchung wird im Rechnungswesen aktiv\n- Automatische Verbuchung in entsprechende Konten\n- Beleg ist nun unver√§nderlich (GoBD-konform)\n\n**Beschreibung:** Finalisiert den Belegerfassungsprozess durch rechtskonforme Buchung in SevDesk mit automatischer Kontierung und Compliance-Sicherung.",
				"width": 200
			},
			"id": "013_DOC_03",
			"name": "SevDesk-Freigabe-Prozess",
			"type": "n8n-nodes-base.stickyNote",
			"typeVersion": 2,
			"position": [1350, 80]
		},
		{
			"parameters": {
				"fromEmail": "accounting@example.com",
				"toEmail": "={{ $json.notificationRecipients.join(',') }}",
				"subject": "Beleg zur manuellen Pr√ºfung: {{ $json.supplierName }} - {{ $json.invoiceNumber }}",
				"content": "=Sehr geehrte(r) Buchhalter(in),\n\nein neuer Beleg wurde erfasst und erfordert Ihre manuelle Pr√ºfung:\n\nLieferant: {{ $json.supplierName }}\nRechnungsnummer: {{ $json.invoiceNumber }}\nDatum: {{ $json.documentDate }}\nBetrag: {{ $json.totalAmount }} {{ $json.currency }}\nSevDesk-ID: {{ $json.voucherId }}\n\nBitte pr√ºfen Sie den Beleg in SevDesk und geben Sie ihn frei.",
				"options": {}
			},
			"id": "013_NOT_01",
			"name": "Pr√ºfung anfordern",
			"type": "n8n-nodes-base.emailSend",
			"typeVersion": 2.1,
			"position": [1350, 400],
			"credentials": {
				"smtp": {
					"id": "10",
					"name": "SMTP"
				}
			}
		},
		{
			"parameters": {
				"content": "**üìß Manuelle-Pr√ºfung-Benachrichtigung**\n\n**Funktion:** Eskalation bei nicht-automatisierbaren Belegen\n\n**Benachrichtigungs-Details:**\n- E-Mail an konfigurierten Empf√§nger-Kreis\n- Vollst√§ndige Beleg-Informationen (Lieferant, Betrag, Datum)\n- Direkt-Link zu SevDesk f√ºr Pr√ºfung\n- Priorisierung basierend auf Betrag/Wichtigkeit\n\n**Eskalations-Logik:**\n- Erinnerung nach 24h bei fehlender Bearbeitung\n- Automatische Weiterleitung an Vorgesetzten nach 48h\n\n**Beschreibung:** Gew√§hrleistet zeitnahe manuelle Pr√ºfung komplexer Belege durch strukturierte Benachrichtigung und Eskalation.",
				"width": 240
			},
			"id": "013_DOC_04",
			"name": "Manuelle-Pr√ºfung-Benachrichtigung",
			"type": "n8n-nodes-base.stickyNote",
			"typeVersion": 2,
			"position": [1350, 550]
		},
		{
			"parameters": {},
			"id": "013_MRG_01",
			"name": "Merge",
			"type": "n8n-nodes-base.merge",
			"typeVersion": 3.2,
			"position": [1600, 300]
		},
		{
			"parameters": {
				"chatId": "accounting-notifications",
				"content": "={% if $json.validationStatus === 'auto_approved' %}\n‚úÖ Beleg automatisch freigegeben:\n{% else %}\nüîç Beleg zur manuellen Pr√ºfung:\n{% endif %}\n\nLieferant: {{ $json.supplierName }}\nRechnungsnr: {{ $json.invoiceNumber }}\nBetrag: {{ $json.totalAmount }} {{ $json.currency }}\nSevDesk-ID: {{ $json.voucherId }}"
			},
			"id": "013_NOT_02",
			"name": "Signal-Benachrichtigung",
			"type": "n8n-nodes-base.scheduleTrigger",
			"typeVersion": 1.2,
			"position": [1850, 300],
			"credentials": {
				"signalApi": {
					"id": "11",
					"name": "Signal API"
				}
			}
		},
		{
			"parameters": {
				"conditions": {
					"boolean": [
						{
							"value1": "={{$node[\"013_NOT_02\"].error !== undefined}}",
							"value2": true
						}
					]
				}
			},
			"id": "013_ERR_01",
			"name": "Fehler aufgetreten?",
			"type": "n8n-nodes-base.if",
			"typeVersion": 2.2,
			"position": [2050, 300]
		},
		{
			"parameters": {
				"fromEmail": "error-reporting@example.com",
				"toEmail": "support@example.com",
				"subject": "Fehler im Belegerfassung-Workflow (Validierung)",
				"content": "=Es ist ein Fehler im Belegerfassung-Workflow (Teil 3: Validierung) aufgetreten:\n\nFehler: {{ $node[\"013_NOT_02\"].error.message }}\n\nDetails: {{ JSON.stringify($node[\"013_NOT_02\"].error, null, 2) }}\n\nZeitstempel: {{ $now.toISOString() }}\n\nBitte √ºberpr√ºfen Sie den Workflow und beheben Sie den Fehler.",
				"options": {}
			},
			"id": "013_NOT_03",
			"name": "Support benachrichtigen",
			"type": "n8n-nodes-base.emailSend",
			"typeVersion": 2.1,
			"position": [2300, 200],
			"credentials": {
				"smtp": {
					"id": "10",
					"name": "SMTP"
				}
			}
		},
		{
			"parameters": {
				"chatId": "support-alerts",
				"content": "=‚ö†Ô∏è FEHLER im Belegerfassung-Workflow (Validierung):\n\n{{$node[\"013_NOT_02\"].error.message }}\n\nZeitstempel: {{ $now.toISOString() }}"
			},
			"id": "013_NOT_04",
			"name": "Error-Schedule",
			"type": "n8n-nodes-base.scheduleTrigger",
			"typeVersion": 1.2,
			"position": [2300, 400],
			"credentials": {
				"signalApi": {
					"id": "11",
					"name": "Signal API"
				}
			}
		},
		{
			"parameters": {
				"respond": "when",
				"responseFor": "webhook",
				"responseCode": 200,
				"body": "{\n    \"success\": true,\n    \"message\": \"Validierungsprozess abgeschlossen\",\n    \"voucherId\": \"{{ $json.voucherId }}\",\n    \"validationStatus\": \"{{ $json.validationStatus }}\"\n}"
			},
			"id": "013_OUT_01",
			"name": "Erfolgsantwort",
			"type": "n8n-nodes-base.respondToWebhook",
			"typeVersion": 2,
			"position": [2050, 600]
		},
		{
			"parameters": {
				"respond": "when",
				"responseFor": "webhook",
				"responseCode": 500,
				"body": "{\n    \"success\": false,\n    \"message\": \"Fehler bei der Validierung\",\n    \"error\": \"{{ $json.error.message }}\"\n}"
			},
			"id": "013_OUT_02",
			"name": "Fehlerantwort",
			"type": "n8n-nodes-base.respondToWebhook",
			"typeVersion": 2,
			"position": [2550, 300]
		}
	],
	"connections": {
		"013_TRG_01": {
			"main": [
				[
					{
						"node": "013_VAL_01",
						"type": "main",
						"index": 0
					}
				]
			]
		},
		"013_VAL_01": {
			"main": [
				[
					{
						"node": "013_TRF_01",
						"type": "main",
						"index": 0
					}
				],
				[]
			]
		},
		"013_TRF_01": {
			"main": [
				[
					{
						"node": "013_VAL_02",
						"type": "main",
						"index": 0
					}
				]
			]
		},
		"013_VAL_02": {
			"main": [
				[
					{
						"node": "013_SVC_01",
						"type": "main",
						"index": 0
					}
				],
				[
					{
						"node": "013_NOT_01",
						"type": "main",
						"index": 0
					}
				]
			]
		},
		"013_SVC_01": {
			"main": [
				[
					{
						"node": "013_MRG_01",
						"type": "main",
						"index": 0
					}
				]
			]
		},
		"013_NOT_01": {
			"main": [
				[
					{
						"node": "013_MRG_01",
						"type": "main",
						"index": 1
					}
				]
			]
		},
		"013_MRG_01": {
			"main": [
				[
					{
						"node": "013_NOT_02",
						"type": "main",
						"index": 0
					}
				]
			]
		},
		"013_NOT_02": {
			"main": [
				[
					{
						"node": "013_ERR_01",
						"type": "main",
						"index": 0
					}
				]
			]
		},
		"013_ERR_01": {
			"main": [
				[
					{
						"node": "013_NOT_03",
						"type": "main",
						"index": 0
					},
					{
						"node": "013_NOT_04",
						"type": "main",
						"index": 0
					},
					{
						"node": "013_OUT_02",
						"type": "main",
						"index": 0
					}
				],
				[
					{
						"node": "013_OUT_01",
						"type": "main",
						"index": 0
					}
				]
			]
		}
	}
}
